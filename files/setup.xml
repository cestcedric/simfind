<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="30000">
	<ForwardTool name="FDS">
		<!--Name of the .osim file used to construct a model.-->
		<model_file />
		<!--Replace the model's force set with sets specified in <force_set_files>? If false, the force set is appended to.-->
		<replace_force_set>false</replace_force_set>
		<!--List of xml files used to construct an force set for the model.-->
		<force_set_files />
		<!--Directory used for writing results.-->
		<results_directory>output/output_0</results_directory>
		<!--Output precision.  It is 8 by default.-->
		<output_precision>20</output_precision>
		<!--Initial time for the simulation.-->
		<initial_time>0</initial_time>
		<!--Final time for the simulation.-->
		<final_time>0.1</final_time>
		<!--Flag indicating whether or not to compute equilibrium values for states other than the coordinates or speeds.  For example, equilibrium muscle fiber lengths or muscle forces.-->
		<solve_for_equilibrium_for_auxiliary_states>false</solve_for_equilibrium_for_auxiliary_states>
		<!--Maximum number of integrator steps.-->
		<maximum_number_of_integrator_steps>20000</maximum_number_of_integrator_steps>
		<!--Maximum integration step size.-->
		<maximum_integrator_step_size>1</maximum_integrator_step_size>
		<!--Minimum integration step size.-->
		<minimum_integrator_step_size>1e-008</minimum_integrator_step_size>
		<!--Integrator error tolerance. When the error is greater, the integrator step size is decreased.-->
		<integrator_error_tolerance>1e-005</integrator_error_tolerance>
		<!--Set of analyses to be run during the investigation.-->
		<AnalysisSet name="Analyses">
			<objects>
				<PointKinematics name="PointKinematics1">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>clavicle</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Clavicle</point_name>
					<point>0.01835 -0.00464 -0.00046</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics2">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>thorax</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>C7</point_name>
					<point>-0.05613 0.05528 -0.00151</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics3">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>scapula</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Shoulder</point_name>
					<point>0.0014 -0.00147 0.01369</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics4">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>humerus</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Biceps</point_name>
					<point>0.01591 -0.18099 -0.00553</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics5">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>humerus</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Elbow.Lateral</point_name>
					<point>0.00509 -0.28055 0.02884</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics6">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>radius</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Forearm</point_name>
					<point>0.03828 -0.11326 0.0174</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics7">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>radius</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Radius</point_name>
					<point>0.05749 -0.22722 0.02738 </point>
				</PointKinematics>
				<PointKinematics name="PointKinematics8">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>hand</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>Handle</point_name>
					<point>0.053418 -0.084496 0.009033</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics9">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>humerus</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Elbow.Medial</point_name>
					<point>-0.00407 -0.28442 -0.05408</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics10">
					<!--Flag (true or false) specifying whether whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>0.1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>ulna</body_name>
					<relative_to_body_name>ground</relative_to_body_name>
					<point_name>R.Ulna</point_name>
					<point>-0.01672 -0.24156 0.04782</point>
				</PointKinematics>
			</objects>
			<groups />
		</AnalysisSet>
		<!--Controller objects in the model.-->
		<ControllerSet name="Controllers">
			<objects>
				<ControlSetController>
					<!--A Storage (.sto) or an XML control nodes file containing the controls for this controlSet.-->
					<controls_file>E:/Dokumente/Schule/tum/Informatik/6/Bachelor-Arbeit/Code/SimFind/files/controls.xml</controls_file>
				</ControlSetController>
			</objects>
			<groups />
		</ControllerSet>
		<!--XML file (.xml) containing the forces applied to the model as ExternalLoads.-->
		<external_loads_file />
		<!--Storage file (.sto) containing the initial states for the forward simulation. This file often contains multiple rows of data, each row being a time-stamped array of states. The first column contains the time.  The rest of the columns contain the states in the order appropriate for the model. In a storage file, unlike a motion file (.mot), non-uniform time spacing is allowed.  If the user-specified initial time for a simulation does not correspond exactly to one of the time stamps in this file, inerpolation is NOT used because it is usually necessary to being a simulation from an exact set of states.  Instead, the closest earlier set of states is used. Having a states file that contains the entire trajectory of a simulations allows for corrective springs for perturbation analysis to be added.-->
		<states_file>E:/Dokumente/Schule/tum/Informatik/6/Bachelor-Arbeit/Code/SimFind/files/CMC_Reach8_states_abbrev.sto</states_file>
		<!--Flag (true or false) indicating whether or not the integrator should use a particular time stepping.  If true, the time stepping is extracted from the initial states file.  In this situation, therefore, the initial states file must contain all the time steps in a simulation and be written out to high precision (usually 20 decimal places).  Setting this flag to true can be useful when reproducing a previous forward simulation with as little drift as possible.  If this flag is false, the integrator is left to determine its own time stepping.-->
		<use_specified_dt>false</use_specified_dt>
	</ForwardTool>
</OpenSimDocument>